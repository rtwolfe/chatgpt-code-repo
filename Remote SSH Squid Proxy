#!/bin/bash

# Function to check if a service is running and restart it if not
check_and_restart_service() {
    local service_name=$1
    if ! sudo systemctl is-active --quiet "$service_name"; then
        echo "$service_name is not running. Restarting..."
        sudo systemctl restart "$service_name"
        echo "$service_name restarted."
    fi
}

# Update the package list and install OpenSSH server and Squid proxy
sudo apt-get update
sudo apt-get install -y openssh-server squid

# Configure Squid to act as a transparent proxy with access control (example allows localhost only)
echo "http_port 3128 transparent" | sudo tee -a /etc/squid/squid.conf
echo "acl localnet src 127.0.0.1/32" | sudo tee -a /etc/squid/squid.conf
echo "http_access allow localnet" | sudo tee -a /etc/squid/squid.conf
echo "http_access deny all" | sudo tee -a /etc/squid/squid.conf

# Restart Squid (if not running, it will start)
check_and_restart_service squid

# Configure OpenSSH for better security
echo "PermitRootLogin no" | sudo tee -a /etc/ssh/sshd_config  # Disable root login
echo "PasswordAuthentication no" | sudo tee -a /etc/ssh/sshd_config  # Disable password authentication
echo "AllowTcpForwarding yes" | sudo tee -a /etc/ssh/sshd_config  # Allow TCP forwarding
echo "GatewayPorts no" | sudo tee -a /etc/ssh/sshd_config  # Disable remote port forwarding
echo "ClientAliveInterval 300" | sudo tee -a /etc/ssh/sshd_config  # Keep SSH connections alive
echo "ClientAliveCountMax 2" | sudo tee -a /etc/ssh/sshd_config  # Max number of keep-alive requests

# Restart SSH (if not running, it will start)
check_and_restart_service ssh

# Set up log rotation for Squid logs
echo "/var/log/squid/*.log {
    daily
    rotate 7
    missingok
    compress
    delaycompress
    notifempty
    create 640 proxy proxy
}" | sudo tee /etc/logrotate.d/squid

# SSH into the server with port forwarding
echo "Now you can SSH into the server with port forwarding:"
echo "ssh -L 8080:localhost:3128 username@your-server-ip"

# Replace 'username' with your server's username and 'your-server-ip' with the server's IP address

# Note: Ensure proper security measures are in place, and customize this script as needed.

====
Notes
====
Certainly, let's describe the script step by step:

1. **Service Checking and Restart Function:**
   - The script defines a function called `check_and_restart_service(service_name)` that checks if a specified service is running using `systemctl is-active`.
   - If the service is not running, it restarts the service using `systemctl restart`.

2. **Updating Package Lists and Installing Software:**
   - The script starts by updating the package list using `apt-get update`.
   - It then installs two essential components: OpenSSH server and Squid proxy, with the `-y` flag to automatically accept installation prompts.

3. **Squid Configuration:**
   - The script configures Squid to act as a transparent proxy with the following settings:
     - `http_port 3128 transparent`: Squid listens on port 3128 and acts as a transparent proxy.
     - `acl localnet src 127.0.0.1/32`: Defines an access control list (ACL) named `localnet` that allows connections from localhost.
     - `http_access allow localnet`: Allows access for the defined `localnet` ACL.
     - `http_access deny all`: Denies access to all other clients. You may want to adjust this ACL for your specific use case.

4. **Restarting Squid:**
   - The script calls the `check_and_restart_service` function to check if Squid is running and restarts it if it's not.

5. **OpenSSH Configuration:**
   - The script configures OpenSSH for improved security with the following settings:
     - `PermitRootLogin no`: Disables root login via SSH, enhancing security.
     - `PasswordAuthentication no`: Disables password-based authentication, encouraging the use of SSH keys.
     - `AllowTcpForwarding yes`: Allows TCP forwarding, which is required for SSH port forwarding.
     - `GatewayPorts no`: Disables remote port forwarding for added security.
     - `ClientAliveInterval 300` and `ClientAliveCountMax 2`: Keep SSH connections alive by sending keep-alive packets at regular intervals.

6. **Restarting SSH:**
   - The script calls the `check_and_restart_service` function to check if SSH is running and restarts it if it's not.

7. **Log Rotation for Squid Logs:**
   - The script configures log rotation for Squid logs in `/var/log/squid/*.log`. Log files are rotated daily, kept for 7 days, and compressed to save disk space.

8. **SSH Port Forwarding Information:**
   - The script provides information on how to SSH into the server with port forwarding, giving an example command:
     ```
     ssh -L 8080:localhost:3128 username@your-server-ip
     ```
     Users are instructed to replace `'username'` with the server's username and `'your-server-ip'` with the server's IP address.

9. **Note:**
   - A reminder to ensure proper security measures are in place and to customize the script as needed is included.

This script automates the setup of an OpenSSH server with a Squid proxy on Ubuntu while adhering to best practices for security and service reliability. It also includes error handling to ensure that essential services are running. You should further customize the script according to your specific requirements and security policies.